<?xml version="1.0" encoding="utf-8" ?>
<Shell xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       x:Class="AppMAUISample.Pages.AppShell"
       xmlns:page="clr-namespace:AppMAUISample.Pages">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
        Ensure atleast a Flyout item or a TabBar is defined for Shell to work
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle"
                   TargetType="Element">
                <Setter Property="Shell.BackgroundColor"
                        Value="{StaticResource PrimaryColor}" />
                <Setter Property="Shell.ForegroundColor"
                        Value="White" />
                <Setter Property="Shell.TitleColor"
                        Value="White" />
                <Setter Property="Shell.DisabledColor"
                        Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor"
                        Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor"
                        Value="{StaticResource PrimaryColor}" />
                <Setter Property="Shell.TabBarForegroundColor"
                        Value="White" />
                <Setter Property="Shell.TabBarUnselectedColor"
                        Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarTitleColor"
                        Value="White" />
            </Style>
            <Style BasedOn="{StaticResource BaseStyle}"
                   TargetType="TabBar" />
            <Style BasedOn="{StaticResource BaseStyle}"
                   TargetType="FlyoutItem" />

            <!--
                Default Styles for all Flyout Items
            -->
            <Style Class="FlyoutItemLabelStyle"
                   TargetType="Label">
                <Setter Property="TextColor"
                        Value="White" />
            </Style>
            <Style ApplyToDerivedTypes="True"
                   Class="FlyoutItemLayoutStyle"
                   TargetType="Layout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel"
                                            Property="Label.TextColor"
                                            Value="{StaticResource PrimaryColor}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                            Value="{StaticResource PrimaryColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
                Custom Style you can apply to any Flyout Item
            -->
            <Style ApplyToDerivedTypes="True"
                   Class="MenuItemLayoutStyle"
                   TargetType="Layout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel"
                                            Property="Label.TextColor"
                                            Value="{StaticResource PrimaryColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>
    <!--
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element
    -->
    
    <FlyoutItem Title="Home">
        <ShellContent ContentTemplate="{DataTemplate page:WelcomePage}"
                      Route="home" />
    </FlyoutItem>
    <FlyoutItem Title="Users">
        <ShellContent ContentTemplate="{DataTemplate page:ListUsersPage}"
                      Route="users" />
    </FlyoutItem>

    <!--
        When the Flyout is visible this will be a menu item you can tie a click behavior to
    -->

    <MenuItem Clicked="OnLogoutClicked" Text="Logout" />

    <!--
        TabBar lets you define content that won't show up in a Flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where
        you don't want users to be able to navigate away from. If you would like to navigate to this
        content you can do so by calling
        await Shell.Current.GoToAsync("//login");
    -->

    <TabBar>
        <ShellContent ContentTemplate="{DataTemplate page:LoginPage}"
                      Route="login" />
    </TabBar>


    <ShellContent ContentTemplate="{DataTemplate page:UserFormPage}" 
                  Route="user" />
</Shell>